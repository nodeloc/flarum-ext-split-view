{"version":3,"file":"forum.js","mappings":"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","sources":["webpack://@nodeloc/flarum-ext-split-view/webpack/bootstrap","webpack://@nodeloc/flarum-ext-split-view/webpack/runtime/compat get default export","webpack://@nodeloc/flarum-ext-split-view/webpack/runtime/define property getters","webpack://@nodeloc/flarum-ext-split-view/webpack/runtime/hasOwnProperty shorthand","webpack://@nodeloc/flarum-ext-split-view/webpack/runtime/make namespace object","webpack://@nodeloc/flarum-ext-split-view/external root \"flarum.core.compat['forum/app']\"","webpack://@nodeloc/flarum-ext-split-view/external root \"flarum.core.compat['common/extend']\"","webpack://@nodeloc/flarum-ext-split-view/external root \"flarum.core.compat['forum/states/ComposerState']\"","webpack://@nodeloc/flarum-ext-split-view/external root \"flarum.core.compat['forum/components/ComposerBody']\"","webpack://@nodeloc/flarum-ext-split-view/external root \"flarum.core.compat['forum/components/DiscussionComposer']\"","webpack://@nodeloc/flarum-ext-split-view/external root \"flarum.core.compat['common/components/TextEditor']\"","webpack://@nodeloc/flarum-ext-split-view/external root \"flarum.core.compat['common/components/Button']\"","webpack://@nodeloc/flarum-ext-split-view/external root \"flarum.core.compat['common/components/Tooltip']\"","webpack://@nodeloc/flarum-ext-split-view/./src/forum/index.js"],"sourcesContent":["// The require scope\nvar __webpack_require__ = {};\n\n","// getDefaultExport function for compatibility with non-harmony modules\n__webpack_require__.n = (module) => {\n\tvar getter = module && module.__esModule ?\n\t\t() => (module['default']) :\n\t\t() => (module);\n\t__webpack_require__.d(getter, { a: getter });\n\treturn getter;\n};","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","const __WEBPACK_NAMESPACE_OBJECT__ = flarum.core.compat['forum/app'];","const __WEBPACK_NAMESPACE_OBJECT__ = flarum.core.compat['common/extend'];","const __WEBPACK_NAMESPACE_OBJECT__ = flarum.core.compat['forum/states/ComposerState'];","const __WEBPACK_NAMESPACE_OBJECT__ = flarum.core.compat['forum/components/ComposerBody'];","const __WEBPACK_NAMESPACE_OBJECT__ = flarum.core.compat['forum/components/DiscussionComposer'];","const __WEBPACK_NAMESPACE_OBJECT__ = flarum.core.compat['common/components/TextEditor'];","const __WEBPACK_NAMESPACE_OBJECT__ = flarum.core.compat['common/components/Button'];","const __WEBPACK_NAMESPACE_OBJECT__ = flarum.core.compat['common/components/Tooltip'];","import app from 'flarum/forum/app';\nimport { extend } from 'flarum/common/extend';\nimport ComposerState from 'flarum/forum/states/ComposerState';\nimport ComposerBody from 'flarum/forum/components/ComposerBody';\nimport DiscussionComposer from 'flarum/forum/components/DiscussionComposer';\nimport TextEditor from 'flarum/common/components/TextEditor';\nimport Button from 'flarum/common/components/Button';\nimport Tooltip from 'flarum/common/components/Tooltip';\napp.initializers.add('nodeloc-split-view', () => {\n\textend(ComposerState.prototype, 'load', function (_, componentClass) {\n    this.isSplitView = false;\n\t});\n\n  extend(TextEditor.prototype, 'controlItems', function (items) {\n    items.add(\n      'preview',\n      <Tooltip text={app.translator.trans('core.forum.composer.preview_tooltip')}>\n        <Button icon=\"fas fa-columns\" className=\"Button Button--icon\" onclick={this.attrs.preview} />\n      </Tooltip>\n    );\n  });\n\n\textend(ComposerBody.prototype, 'headerItems', function (items) {\n\t\tif (app.current.get('stream')?.discussion) {\n\t\t\treturn\n\t\t}\n\n\t\titems.add(\n\t\t\t'preview-discussion',\n\t\t\t<div\n\t\t\t\tclassName={`Split-view Post-body ${app.composer.isSplitView ? '' : 'hidden'}`}\n\t\t\t></div>,\n\t\t\t50\n\t\t);\n\t});\n\n\tDiscussionComposer.prototype.jumpToPreview = function (e) {\n\t\tif (!(e instanceof MouseEvent)) {\n\t\t\treturn;\n\t\t}\n\n\t\tthis.composer.isSplitView = !this.composer.isSplitView;\n\n\t\tif (this.composer.isSplitView) {\n      this.$('.TextEditor textarea').css({ width: '50%' });\n      let previousContent = this.composer.fields.content();\n      s9e.TextFormatter.preview(\n        this.composer.fields.content(),\n        this.$('.Split-view')[0]\n      );\n      this.composerPreviewInterval = setInterval( () =>{\n        const currentContent = this.composer.fields.content();\n        if (currentContent !== previousContent) {\n          previousContent = currentContent;\n          s9e.TextFormatter.preview(\n            currentContent,\n            this.$('.Split-view')[0]\n          );\n        }\n      }, 100);\n\t\t}else{\n      this.$('.TextEditor textarea').css({ width: '100%' });\n    }\n\t};\n\n\textend(ComposerBody.prototype, 'oncreate', function () {\n\t\tthis.composerPreviewInterval = setInterval(function () {\n\t\t\tif (app.composer.isSplitView) {\n\t\t\t\tconst $textarea = this.$('.TextEditor textarea');\n\t\t\t\tif ($textarea.offset()) {\n\t\t\t\t\tthis.$('.Split-view').css({\n\t\t\t\t\t\twidth: $textarea.width(),\n\t\t\t\t\t\theight: $textarea.height() + 10,\n\t\t\t\t\t\ttop: $textarea.offset().top - $('.Composer').offset().top,\n\t\t\t\t\t\tleft: $textarea.offset().left - $('.Composer').offset().left+$textarea.width(),\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t}\n\t\t}, 100);\n\t});\n\n  extend(ComposerBody.prototype, 'onremove', function () {\n    clearInterval(this.composerPreviewInterval)\n  })\n});\n"],"names":["__webpack_require__","module","getter","__esModule","d","a","exports","definition","key","o","Object","defineProperty","enumerable","get","obj","prop","prototype","hasOwnProperty","call","Symbol","toStringTag","value","flarum","core","compat","app","add","extend","ComposerState","_","componentClass","this","isSplitView","TextEditor","items","m","Tooltip","text","trans","Button","icon","className","onclick","attrs","preview","ComposerBody","_app$current$get","discussion","DiscussionComposer","jumpToPreview","e","_this","MouseEvent","composer","$","css","width","previousContent","fields","content","s9e","TextFormatter","composerPreviewInterval","setInterval","currentContent","$textarea","offset","height","top","left","clearInterval"],"sourceRoot":""}